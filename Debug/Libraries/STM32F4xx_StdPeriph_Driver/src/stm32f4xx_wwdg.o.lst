   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_wwdg.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	WWDG_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	WWDG_DeInit:
  24              	.LFB110:
  25              		.file 1 "../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c"
   1:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
   2:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
   3:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @file    stm32f4xx_wwdg.c
   4:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @version V1.0.0RC1
   6:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @date    25-August-2011
   7:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          functionalities of the Window watchdog (WWDG) peripheral:           
   9:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - Prescaler, Refresh window and Counter configuration
  10:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - WWDG activation
  11:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - Interrupts and flags management
  12:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             
  13:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *  @verbatim
  14:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *    
  15:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  16:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                     WWDG features
  17:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  18:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                        
  19:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Once enabled the WWDG generates a system reset on expiry of a programmed
  20:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          time period, unless the program refreshes the counter (downcounter) 
  21:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          before to reach 0x3F value (i.e. a reset is generated when the counter
  22:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          value rolls over from 0x40 to 0x3F). 
  23:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          An MCU reset is also generated if the counter value is refreshed
  24:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          before the counter has reached the refresh window value. This 
  25:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          implies that the counter must be refreshed in a limited window.
  26:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  27:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Once enabled the WWDG cannot be disabled except by a system reset.                    
  28:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          
  29:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDGRST flag in RCC_CSR register can be used to inform when a WWDG
  30:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          reset occurs.
  31:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  32:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          The WWDG counter input clock is derived from the APB clock divided 
  33:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          by a programmable prescaler.
  34:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *              
  35:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDG counter clock = PCLK1 / Prescaler
  36:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDG timeout = (WWDG counter clock) * (counter value)
  37:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                      
  38:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Min-max timeout value @30 MHz(PCLK1): ~136.5 us / ~69.9 ms
  39:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                            
  40:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  41:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                 How to use this driver
  42:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          =================================================================== 
  43:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          1. Enable WWDG clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE) functio
  44:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  45:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          2. Configure the WWDG prescaler using WWDG_SetPrescaler() function
  46:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                           
  47:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          3. Configure the WWDG refresh window using WWDG_SetWindowValue() function
  48:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  49:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          4. Set the WWDG counter value and start it using WWDG_Enable() function.
  50:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             When the WWDG is enabled the counter value should be configured to 
  51:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             a value greater than 0x40 to prevent generating an immediate reset.     
  52:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  53:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          5. Optionally you can enable the Early wakeup interrupt which is 
  54:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             generated when the counter reach 0x40.
  55:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             Once enabled this interrupt cannot be disabled except by a system reset.
  56:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                 
  57:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          6. Then the application program must refresh the WWDG counter at regular
  58:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  59:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             WWDG_SetCounter() function. This operation must occur only when
  60:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             the counter value is lower than the refresh window value, 
  61:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             programmed using WWDG_SetWindowValue().         
  62:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  63:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *  @endverbatim  
  64:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                             
  65:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  66:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @attention
  67:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  68:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  75:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  77:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  78:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  79:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  80:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_wwdg.h"
  81:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_rcc.h"
  82:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  83:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
  85:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  86:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  87:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG 
  88:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief WWDG driver modules
  89:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
  90:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  91:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  92:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private typedef -----------------------------------------------------------*/
  93:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private define ------------------------------------------------------------*/
  94:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  95:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
  96:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
  97:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Alias word address of EWI bit */
  98:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
  99:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define EWI_BitNumber     0x09
 100:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
 101:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 102:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
 103:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* CFR register bit mask */
 104:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_WDGTB_MASK    ((uint32_t)0xFFFFFE7F)
 105:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_W_MASK        ((uint32_t)0xFFFFFF80)
 106:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define BIT_MASK          ((uint8_t)0x7F)
 107:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 108:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private macro -------------------------------------------------------------*/
 109:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private variables ---------------------------------------------------------*/
 110:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private function prototypes -----------------------------------------------*/
 111:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private functions ---------------------------------------------------------*/
 112:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 113:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Functions
 114:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 115:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 116:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 117:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group1 Prescaler, Refresh window and Counter configuration functions
 118:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   Prescaler, Refresh window and Counter configuration functions 
 119:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 120:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 121:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 122:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****           Prescaler, Refresh window and Counter configuration functions
 123:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 124:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 125:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 126:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 127:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 128:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 129:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 130:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
 131:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 132:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 133:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 134:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_DeInit(void)
 135:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
  26              		.loc 1 135 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
 136:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
  38              		.loc 1 136 0
  39 0004 4FF40060 		mov	r0, #2048
  40 0008 4FF00101 		mov	r1, #1
  41 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 137:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
  42              		.loc 1 137 0
  43 0010 4FF40060 		mov	r0, #2048
  44 0014 4FF00001 		mov	r1, #0
  45 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 138:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
  46              		.loc 1 138 0
  47 001c 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51 001e 00BF     		.align	2
  52              		.global	WWDG_SetPrescaler
  53              		.thumb
  54              		.thumb_func
  56              	WWDG_SetPrescaler:
  57              	.LFB111:
 139:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 140:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 141:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 142:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 143:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter can be one of the following values:
 144:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 145:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 146:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 147:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 148:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 149:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 150:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 151:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
  58              		.loc 1 151 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 16
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0020 80B4     		push	{r7}
  64              	.LCFI2:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0022 85B0     		sub	sp, sp, #20
  68              	.LCFI3:
  69              		.cfi_def_cfa_offset 24
  70 0024 00AF     		add	r7, sp, #0
  71              	.LCFI4:
  72              		.cfi_def_cfa_register 7
  73 0026 7860     		str	r0, [r7, #4]
 152:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   uint32_t tmpreg = 0;
  74              		.loc 1 152 0
  75 0028 4FF00003 		mov	r3, #0
  76 002c FB60     		str	r3, [r7, #12]
 153:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 154:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
 155:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 156:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_MASK;
  77              		.loc 1 156 0
  78 002e 4FF43053 		mov	r3, #11264
  79 0032 C4F20003 		movt	r3, 16384
  80 0036 5B68     		ldr	r3, [r3, #4]
  81 0038 23F4C073 		bic	r3, r3, #384
  82 003c FB60     		str	r3, [r7, #12]
 157:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 158:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg |= WWDG_Prescaler;
  83              		.loc 1 158 0
  84 003e FA68     		ldr	r2, [r7, #12]
  85 0040 7B68     		ldr	r3, [r7, #4]
  86 0042 1343     		orrs	r3, r3, r2
  87 0044 FB60     		str	r3, [r7, #12]
 159:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 160:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
  88              		.loc 1 160 0
  89 0046 4FF43053 		mov	r3, #11264
  90 004a C4F20003 		movt	r3, 16384
  91 004e FA68     		ldr	r2, [r7, #12]
  92 0050 5A60     		str	r2, [r3, #4]
 161:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
  93              		.loc 1 161 0
  94 0052 07F11407 		add	r7, r7, #20
  95 0056 BD46     		mov	sp, r7
  96 0058 80BC     		pop	{r7}
  97 005a 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE111:
 101              		.align	2
 102              		.global	WWDG_SetWindowValue
 103              		.thumb
 104              		.thumb_func
 106              	WWDG_SetWindowValue:
 107              	.LFB112:
 162:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 163:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 164:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG window value.
 165:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 166:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter value must be lower than 0x80.
 167:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 168:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 169:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 170:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 108              		.loc 1 170 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 16
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113 005c 80B4     		push	{r7}
 114              	.LCFI5:
 115              		.cfi_def_cfa_offset 4
 116              		.cfi_offset 7, -4
 117 005e 85B0     		sub	sp, sp, #20
 118              	.LCFI6:
 119              		.cfi_def_cfa_offset 24
 120 0060 00AF     		add	r7, sp, #0
 121              	.LCFI7:
 122              		.cfi_def_cfa_register 7
 123 0062 0346     		mov	r3, r0
 124 0064 FB71     		strb	r3, [r7, #7]
 171:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   __IO uint32_t tmpreg = 0;
 125              		.loc 1 171 0
 126 0066 4FF00003 		mov	r3, #0
 127 006a FB60     		str	r3, [r7, #12]
 172:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 173:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 174:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 175:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Clear W[6:0] bits */
 176:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 177:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_MASK;
 128              		.loc 1 177 0
 129 006c 4FF43053 		mov	r3, #11264
 130 0070 C4F20003 		movt	r3, 16384
 131 0074 5B68     		ldr	r3, [r3, #4]
 132 0076 23F07F03 		bic	r3, r3, #127
 133 007a FB60     		str	r3, [r7, #12]
 178:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 179:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 180:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_MASK;
 134              		.loc 1 180 0
 135 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 136 007e 03F07F02 		and	r2, r3, #127
 137 0082 FB68     		ldr	r3, [r7, #12]
 138 0084 1343     		orrs	r3, r3, r2
 139 0086 FB60     		str	r3, [r7, #12]
 181:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 182:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 183:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
 140              		.loc 1 183 0
 141 0088 4FF43053 		mov	r3, #11264
 142 008c C4F20003 		movt	r3, 16384
 143 0090 FA68     		ldr	r2, [r7, #12]
 144 0092 5A60     		str	r2, [r3, #4]
 184:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 145              		.loc 1 184 0
 146 0094 07F11407 		add	r7, r7, #20
 147 0098 BD46     		mov	sp, r7
 148 009a 80BC     		pop	{r7}
 149 009c 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE112:
 153 009e 00BF     		.align	2
 154              		.global	WWDG_EnableIT
 155              		.thumb
 156              		.thumb_func
 158              	WWDG_EnableIT:
 159              	.LFB113:
 185:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 186:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 187:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 188:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @note   Once enabled this interrupt cannot be disabled except by a system reset.
 189:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 190:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 191:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 192:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_EnableIT(void)
 193:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 160              		.loc 1 193 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165 00a0 80B4     		push	{r7}
 166              	.LCFI8:
 167              		.cfi_def_cfa_offset 4
 168              		.cfi_offset 7, -4
 169 00a2 00AF     		add	r7, sp, #0
 170              	.LCFI9:
 171              		.cfi_def_cfa_register 7
 194:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 172              		.loc 1 194 0
 173 00a4 48F2A403 		movw	r3, #32932
 174 00a8 C4F20523 		movt	r3, 16901
 175 00ac 4FF00102 		mov	r2, #1
 176 00b0 1A60     		str	r2, [r3, #0]
 195:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 177              		.loc 1 195 0
 178 00b2 BD46     		mov	sp, r7
 179 00b4 80BC     		pop	{r7}
 180 00b6 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE113:
 184              		.align	2
 185              		.global	WWDG_SetCounter
 186              		.thumb
 187              		.thumb_func
 189              	WWDG_SetCounter:
 190              	.LFB114:
 196:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 197:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 198:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG counter value.
 199:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 200:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 201:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   an immediate reset) 
 202:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 203:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 204:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 205:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 191              		.loc 1 205 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 8
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196 00b8 80B4     		push	{r7}
 197              	.LCFI10:
 198              		.cfi_def_cfa_offset 4
 199              		.cfi_offset 7, -4
 200 00ba 83B0     		sub	sp, sp, #12
 201              	.LCFI11:
 202              		.cfi_def_cfa_offset 16
 203 00bc 00AF     		add	r7, sp, #0
 204              	.LCFI12:
 205              		.cfi_def_cfa_register 7
 206 00be 0346     		mov	r3, r0
 207 00c0 FB71     		strb	r3, [r7, #7]
 206:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 207:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 208:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 209:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 210:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CR = Counter & BIT_MASK;
 208              		.loc 1 210 0
 209 00c2 4FF43053 		mov	r3, #11264
 210 00c6 C4F20003 		movt	r3, 16384
 211 00ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 212 00cc 02F07F02 		and	r2, r2, #127
 213 00d0 1A60     		str	r2, [r3, #0]
 211:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 214              		.loc 1 211 0
 215 00d2 07F10C07 		add	r7, r7, #12
 216 00d6 BD46     		mov	sp, r7
 217 00d8 80BC     		pop	{r7}
 218 00da 7047     		bx	lr
 219              		.cfi_endproc
 220              	.LFE114:
 222              		.align	2
 223              		.global	WWDG_Enable
 224              		.thumb
 225              		.thumb_func
 227              	WWDG_Enable:
 228              	.LFB115:
 212:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 213:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @}
 214:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 215:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 216:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group2 WWDG activation functions
 217:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   WWDG activation functions 
 218:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 219:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 221:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****                        WWDG activation function
 222:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 223:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 224:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 225:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 226:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 227:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 228:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 229:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 230:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 231:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 232:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   an immediate reset)
 233:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 234:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 235:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 236:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 229              		.loc 1 236 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234 00dc 80B4     		push	{r7}
 235              	.LCFI13:
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 00de 83B0     		sub	sp, sp, #12
 239              	.LCFI14:
 240              		.cfi_def_cfa_offset 16
 241 00e0 00AF     		add	r7, sp, #0
 242              	.LCFI15:
 243              		.cfi_def_cfa_register 7
 244 00e2 0346     		mov	r3, r0
 245 00e4 FB71     		strb	r3, [r7, #7]
 237:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 238:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 239:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CR = WWDG_CR_WDGA | Counter;
 246              		.loc 1 239 0
 247 00e6 4FF43053 		mov	r3, #11264
 248 00ea C4F20003 		movt	r3, 16384
 249 00ee FA79     		ldrb	r2, [r7, #7]
 250 00f0 62F07F02 		orn	r2, r2, #127
 251 00f4 D2B2     		uxtb	r2, r2
 252 00f6 1A60     		str	r2, [r3, #0]
 240:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 253              		.loc 1 240 0
 254 00f8 07F10C07 		add	r7, r7, #12
 255 00fc BD46     		mov	sp, r7
 256 00fe 80BC     		pop	{r7}
 257 0100 7047     		bx	lr
 258              		.cfi_endproc
 259              	.LFE115:
 261 0102 00BF     		.align	2
 262              		.global	WWDG_GetFlagStatus
 263              		.thumb
 264              		.thumb_func
 266              	WWDG_GetFlagStatus:
 267              	.LFB116:
 241:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 242:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @}
 243:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 244:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 245:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group3 Interrupts and flags management functions
 246:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   Interrupts and flags management functions 
 247:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 248:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 249:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 250:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****                  Interrupts and flags management functions
 251:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 252:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 253:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 254:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 255:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 256:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 257:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 258:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 259:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 260:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 261:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 262:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 263:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 268              		.loc 1 263 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 8
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273 0104 80B4     		push	{r7}
 274              	.LCFI16:
 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 7, -4
 277 0106 83B0     		sub	sp, sp, #12
 278              	.LCFI17:
 279              		.cfi_def_cfa_offset 16
 280 0108 00AF     		add	r7, sp, #0
 281              	.LCFI18:
 282              		.cfi_def_cfa_register 7
 264:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   FlagStatus bitstatus = RESET;
 283              		.loc 1 264 0
 284 010a 4FF00003 		mov	r3, #0
 285 010e FB71     		strb	r3, [r7, #7]
 265:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     
 266:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   if ((WWDG->SR) != (uint32_t)RESET)
 286              		.loc 1 266 0
 287 0110 4FF43053 		mov	r3, #11264
 288 0114 C4F20003 		movt	r3, 16384
 289 0118 9B68     		ldr	r3, [r3, #8]
 290 011a 002B     		cmp	r3, #0
 291 011c 03D0     		beq	.L8
 267:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   {
 268:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     bitstatus = SET;
 292              		.loc 1 268 0
 293 011e 4FF00103 		mov	r3, #1
 294 0122 FB71     		strb	r3, [r7, #7]
 295 0124 02E0     		b	.L9
 296              	.L8:
 269:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   }
 270:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   else
 271:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   {
 272:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     bitstatus = RESET;
 297              		.loc 1 272 0
 298 0126 4FF00003 		mov	r3, #0
 299 012a FB71     		strb	r3, [r7, #7]
 300              	.L9:
 273:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   }
 274:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   return bitstatus;
 301              		.loc 1 274 0
 302 012c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 275:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 303              		.loc 1 275 0
 304 012e 1846     		mov	r0, r3
 305 0130 07F10C07 		add	r7, r7, #12
 306 0134 BD46     		mov	sp, r7
 307 0136 80BC     		pop	{r7}
 308 0138 7047     		bx	lr
 309              		.cfi_endproc
 310              	.LFE116:
 312 013a 00BF     		.align	2
 313              		.global	WWDG_ClearFlag
 314              		.thumb
 315              		.thumb_func
 317              	WWDG_ClearFlag:
 318              	.LFB117:
 276:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 277:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 278:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 279:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 280:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 281:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 282:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_ClearFlag(void)
 283:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 319              		.loc 1 283 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 324 013c 80B4     		push	{r7}
 325              	.LCFI19:
 326              		.cfi_def_cfa_offset 4
 327              		.cfi_offset 7, -4
 328 013e 00AF     		add	r7, sp, #0
 329              	.LCFI20:
 330              		.cfi_def_cfa_register 7
 284:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 331              		.loc 1 284 0
 332 0140 4FF43053 		mov	r3, #11264
 333 0144 C4F20003 		movt	r3, 16384
 334 0148 4FF00002 		mov	r2, #0
 335 014c 9A60     		str	r2, [r3, #8]
 285:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 336              		.loc 1 285 0
 337 014e BD46     		mov	sp, r7
 338 0150 80BC     		pop	{r7}
 339 0152 7047     		bx	lr
 340              		.cfi_endproc
 341              	.LFE117:
 343              	.Letext0:
 344              		.file 2 "c:\\program files (x86)\\codesourcery\\eabi\\bin\\../lib/gcc/arm-none-eabi/4.6.3/../../..
 345              		.file 3 "C:\\Users\\Jure\\workspace\\TemplateProject\\Libraries\\Device\\STM32F4xx\\Include/stm32f
 346              		.file 4 "C:\\Users\\Jure\\workspace\\TemplateProject\\Libraries\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_wwdg.c
C:\Users\Jure\AppData\Local\Temp\ccv0x67e.s:18     .text:00000000 $t
C:\Users\Jure\AppData\Local\Temp\ccv0x67e.s:23     .text:00000000 WWDG_DeInit
C:\Users\Jure\AppData\Local\Temp\ccv0x67e.s:56     .text:00000020 WWDG_SetPrescaler
C:\Users\Jure\AppData\Local\Temp\ccv0x67e.s:106    .text:0000005c WWDG_SetWindowValue
C:\Users\Jure\AppData\Local\Temp\ccv0x67e.s:158    .text:000000a0 WWDG_EnableIT
C:\Users\Jure\AppData\Local\Temp\ccv0x67e.s:189    .text:000000b8 WWDG_SetCounter
C:\Users\Jure\AppData\Local\Temp\ccv0x67e.s:227    .text:000000dc WWDG_Enable
C:\Users\Jure\AppData\Local\Temp\ccv0x67e.s:266    .text:00000104 WWDG_GetFlagStatus
C:\Users\Jure\AppData\Local\Temp\ccv0x67e.s:317    .text:0000013c WWDG_ClearFlag
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
