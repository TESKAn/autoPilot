   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_cryp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	CRYP_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	CRYP_DeInit:
  24              	.LFB110:
  25              		.file 1 "../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c"
   1:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
   2:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
   3:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @file    stm32f4xx_cryp.c
   4:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @version V1.0.0RC1
   6:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @date    25-August-2011
   7:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          functionalities of the  Cryptographic processor (CRYP) peripheral:           
   9:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Initialization and Configuration functions
  10:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Data treatment functions 
  11:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Context swapping functions     
  12:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - DMA interface function       
  13:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Interrupts and flags management       
  14:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  15:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *  @verbatim
  16:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                               
  17:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================      
  18:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                                 How to use this driver
  19:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          =================================================================== 
  20:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          1. Enable the CRYP controller clock using 
  21:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *              RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  22:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  23:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          2. Initialise the CRYP using CRYP_Init(), CRYP_KeyInit() and if 
  24:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             needed CRYP_IVInit(). 
  25:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  26:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          3. Flush the IN and OUT FIFOs by using CRYP_FIFOFlush() function.
  27:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  28:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          4. Enable the CRYP controller using the CRYP_Cmd() function. 
  29:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  30:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          5. If using DMA for Data input and output transfer, 
  31:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             Activate the needed DMA Requests using CRYP_DMACmd() function 
  32:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  33:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          6. If DMA is not used for data transfer, use CRYP_DataIn() and 
  34:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             CRYP_DataOut() functions to enter data to IN FIFO and get result
  35:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             from OUT FIFO.
  36:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  37:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          7. To control CRYP events you can use one of the following 
  38:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *              two methods:
  39:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *               - Check on CRYP flags using the CRYP_GetFlagStatus() function.  
  40:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *               - Use CRYP interrupts through the function CRYP_ITConfig() at 
  41:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                 initialization phase and CRYP_GetITStatus() function into 
  42:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                 interrupt routines in processing phase.
  43:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       
  44:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          8. Save and restore Cryptographic processor context using  
  45:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             CRYP_SaveContext() and CRYP_RestoreContext() functions.     
  46:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  47:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  48:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================  
  49:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                Procedure to perform an encryption or a decryption
  50:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================  
  51:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  52:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *      Initialization
  53:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *      ===============  
  54:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *     1. Initialize the peripheral using CRYP_Init(), CRYP_KeyInit() and 
  55:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        CRYP_IVInit functions:
  56:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Configure the key size (128-, 192- or 256-bit, in the AES only) 
  57:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Enter the symmetric key 
  58:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Configure the data type
  59:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - In case of decryption in AES-ECB or AES-CBC, you must prepare 
  60:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          the key: configure the key preparation mode. Then Enable the CRYP 
  61:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          peripheral using CRYP_Cmd() function: the BUSY flag is set. 
  62:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          Wait until BUSY flag is reset : the key is prepared for decryption
  63:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Configure the algorithm and chaining (the DES/TDES in ECB/CBC, the 
  64:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          AES in ECB/CBC/CTR) 
  65:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Configure the direction (encryption/decryption).
  66:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Write the initialization vectors (in CBC or CTR modes only)
  67:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  68:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Flush the IN and OUT FIFOs using the CRYP_FIFOFlush() function
  69:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  70:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  71:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    Basic Processing mode (polling mode) 
  72:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ====================================  
  73:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Enable the cryptographic processor using CRYP_Cmd() function.
  74:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  75:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Write the first blocks in the input FIFO (2 to 8 words) using 
  76:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_DataIn() function.
  77:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  78:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. Repeat the following sequence until the complete message has been 
  79:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       processed:
  80:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  81:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       a) Wait for flag CRYP_FLAG_OFNE occurs (using CRYP_GetFlagStatus() 
  82:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          function), then read the OUT-FIFO using CRYP_DataOut() function
  83:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          (1 block or until the FIFO is empty)
  84:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  85:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       b) Wait for flag CRYP_FLAG_IFNF occurs, (using CRYP_GetFlagStatus() 
  86:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          function then write the IN FIFO using CRYP_DataIn() function 
  87:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          (1 block or until the FIFO is full)
  88:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  89:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    4. At the end of the processing, CRYP_FLAG_BUSY flag will be reset and 
  90:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        both FIFOs are empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is 
  91:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        reset). You can disable the peripheral using CRYP_Cmd() function.
  92:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  93:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    Interrupts Processing mode 
  94:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ===========================
  95:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    In this mode, Processing is done when the data are transferred by the 
  96:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    CPU during interrupts.
  97:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  98:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Enable the interrupts CRYP_IT_INI and CRYP_IT_OUTI using 
  99:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_ITConfig() function.
 100:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 101:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Enable the cryptographic processor using CRYP_Cmd() function.
 102:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 103:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. In the CRYP_IT_INI interrupt handler : load the input message into the 
 104:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       IN FIFO using CRYP_DataIn() function . You can load 2 or 4 words at a 
 105:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       time, or load data until the IN FIFO is full. When the last word of
 106:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the message has been entered into the IN FIFO, disable the CRYP_IT_INI 
 107:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       interrupt (using CRYP_ITConfig() function).
 108:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 109:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    4. In the CRYP_IT_OUTI interrupt handler : read the output message from 
 110:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the OUT FIFO using CRYP_DataOut() function. You can read 1 block (2 or 
 111:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       4 words) at a time or read data until the FIFO is empty.
 112:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       When the last word has been read, INIM=0, BUSY=0 and both FIFOs are 
 113:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is reset). 
 114:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       You can disable the CRYP_IT_OUTI interrupt (using CRYP_ITConfig() 
 115:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       function) and you can disable the peripheral using CRYP_Cmd() function.
 116:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 117:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    DMA Processing mode 
 118:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ====================
 119:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    In this mode, Processing is done when the DMA is used to transfer the 
 120:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    data from/to the memory.
 121:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 122:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Configure the DMA controller to transfer the input data from the 
 123:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       memory using DMA_Init() function. 
 124:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       The transfer length is the length of the message. 
 125:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       As message padding is not managed by the peripheral, the message 
 126:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       length must be an entire number of blocks. The data are transferred 
 127:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       in burst mode. The burst length is 4 words in the AES and 2 or 4 
 128:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       words in the DES/TDES. The DMA should be configured to set an 
 129:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       interrupt on transfer completion of the output data to indicate that 
 130:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the processing is finished. 
 131:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       Refer to DMA peripheral driver for more details.  
 132:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 133:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Enable the cryptographic processor using CRYP_Cmd() function. 
 134:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       Enable the DMA requests CRYP_DMAReq_DataIN and CRYP_DMAReq_DataOUT 
 135:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       using CRYP_DMACmd() function.
 136:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 137:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. All the transfers and processing are managed by the DMA and the 
 138:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       cryptographic processor. The DMA transfer complete interrupt indicates 
 139:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       that the processing is complete. Both FIFOs are normally empty and 
 140:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_FLAG_BUSY flag is reset.
 141:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 142:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *  @endverbatim
 143:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 144:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
 145:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @attention
 146:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 147:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 148:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 149:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 150:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 151:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 152:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 153:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 154:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 155:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************  
 156:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 157:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 158:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Includes ------------------------------------------------------------------*/
 159:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_cryp.h"
 160:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_rcc.h"
 161:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 162:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 163:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 164:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 165:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 166:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP 
 167:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief CRYP driver modules
 168:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 169:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 170:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 171:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private typedef -----------------------------------------------------------*/
 172:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private define ------------------------------------------------------------*/
 173:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define FLAG_MASK     ((uint8_t)0x20)
 174:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define MAX_TIMEOUT   ((uint16_t)0xFFFF)
 175:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 176:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private macro -------------------------------------------------------------*/
 177:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private variables ---------------------------------------------------------*/
 178:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private function prototypes -----------------------------------------------*/
 179:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private functions ---------------------------------------------------------*/
 180:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 181:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Private_Functions
 182:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 183:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 184:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 185:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group1 Initialization and Configuration functions
 186:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    Initialization and Configuration functions 
 187:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 188:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 189:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 190:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       Initialization and Configuration functions
 191:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 192:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to 
 193:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Initialize the cryptographic Processor using CRYP_Init() function 
 194:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -  Encrypt or Decrypt 
 195:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -  mode : TDES-ECB, TDES-CBC, 
 196:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 DES-ECB, DES-CBC, 
 197:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 AES-ECB, AES-CBC, AES-CTR, AES-Key 
 198:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - DataType :  32-bit data, 16-bit data, bit data or bit-string
 199:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - Key Size (only in AES modes)
 200:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Configure the Encrypt or Decrypt Key using CRYP_KeyInit() function 
 201:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Configure the Initialization Vectors(IV) for CBC and CTR modes using 
 202:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      CRYP_IVInit() function.  
 203:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Flushes the IN and OUT FIFOs : using CRYP_FIFOFlush() function.                         
 204:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Enable or disable the CRYP Processor using CRYP_Cmd() function 
 205:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 206:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 207:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 208:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 209:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 210:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 211:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Deinitializes the CRYP peripheral registers to their default reset values
 212:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 213:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 214:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 215:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DeInit(void)
 216:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
  26              		.loc 1 216 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
 217:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable CRYP reset state */
 218:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, ENABLE);
  38              		.loc 1 218 0
  39 0004 4FF01000 		mov	r0, #16
  40 0008 4FF00101 		mov	r1, #1
  41 000c FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 219:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Release CRYP from reset state */
 221:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, DISABLE);
  42              		.loc 1 221 0
  43 0010 4FF01000 		mov	r0, #16
  44 0014 4FF00001 		mov	r1, #0
  45 0018 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 222:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
  46              		.loc 1 222 0
  47 001c 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51 001e 00BF     		.align	2
  52              		.global	CRYP_Init
  53              		.thumb
  54              		.thumb_func
  56              	CRYP_Init:
  57              	.LFB111:
 223:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 224:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 225:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP peripheral according to the specified parameters
 226:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         in the CRYP_InitStruct.
 227:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
 228:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP peripheral.
 229:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 230:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 231:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
 232:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
  58              		.loc 1 232 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0020 80B4     		push	{r7}
  64              	.LCFI2:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0022 83B0     		sub	sp, sp, #12
  68              	.LCFI3:
  69              		.cfi_def_cfa_offset 16
  70 0024 00AF     		add	r7, sp, #0
  71              	.LCFI4:
  72              		.cfi_def_cfa_register 7
  73 0026 7860     		str	r0, [r7, #4]
 233:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 234:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
 235:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
 236:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
 237:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 238:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select Algorithm mode*/  
 239:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGOMODE;
  74              		.loc 1 239 0
  75 0028 4FF00003 		mov	r3, #0
  76 002c C5F20603 		movt	r3, 20486
  77 0030 4FF00002 		mov	r2, #0
  78 0034 C5F20602 		movt	r2, 20486
  79 0038 1268     		ldr	r2, [r2, #0]
  80 003a 22F03802 		bic	r2, r2, #56
  81 003e 1A60     		str	r2, [r3, #0]
 240:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
  82              		.loc 1 240 0
  83 0040 4FF00003 		mov	r3, #0
  84 0044 C5F20603 		movt	r3, 20486
  85 0048 4FF00002 		mov	r2, #0
  86 004c C5F20602 		movt	r2, 20486
  87 0050 1168     		ldr	r1, [r2, #0]
  88 0052 7A68     		ldr	r2, [r7, #4]
  89 0054 5288     		ldrh	r2, [r2, #2]
  90 0056 0A43     		orrs	r2, r2, r1
  91 0058 1A60     		str	r2, [r3, #0]
 241:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 242:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select dataType */ 
 243:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_DATATYPE;
  92              		.loc 1 243 0
  93 005a 4FF00003 		mov	r3, #0
  94 005e C5F20603 		movt	r3, 20486
  95 0062 4FF00002 		mov	r2, #0
  96 0066 C5F20602 		movt	r2, 20486
  97 006a 1268     		ldr	r2, [r2, #0]
  98 006c 22F0C002 		bic	r2, r2, #192
  99 0070 1A60     		str	r2, [r3, #0]
 244:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
 100              		.loc 1 244 0
 101 0072 4FF00003 		mov	r3, #0
 102 0076 C5F20603 		movt	r3, 20486
 103 007a 4FF00002 		mov	r2, #0
 104 007e C5F20602 		movt	r2, 20486
 105 0082 1168     		ldr	r1, [r2, #0]
 106 0084 7A68     		ldr	r2, [r7, #4]
 107 0086 9288     		ldrh	r2, [r2, #4]
 108 0088 0A43     		orrs	r2, r2, r1
 109 008a 1A60     		str	r2, [r3, #0]
 245:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 246:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* select Key size (used only with AES algorithm) */
 247:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_ECB) ||
 110              		.loc 1 247 0
 111 008c 7B68     		ldr	r3, [r7, #4]
 112 008e 5B88     		ldrh	r3, [r3, #2]
 113 0090 202B     		cmp	r3, #32
 114 0092 0BD0     		beq	.L3
 248:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CBC) ||
 115              		.loc 1 248 0 discriminator 1
 116 0094 7B68     		ldr	r3, [r7, #4]
 117 0096 5B88     		ldrh	r3, [r3, #2]
 247:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_ECB) ||
 118              		.loc 1 247 0 discriminator 1
 119 0098 282B     		cmp	r3, #40
 120 009a 07D0     		beq	.L3
 249:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CTR) ||
 121              		.loc 1 249 0
 122 009c 7B68     		ldr	r3, [r7, #4]
 123 009e 5B88     		ldrh	r3, [r3, #2]
 248:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CBC) ||
 124              		.loc 1 248 0
 125 00a0 302B     		cmp	r3, #48
 126 00a2 03D0     		beq	.L3
 250:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_Key))
 127              		.loc 1 250 0
 128 00a4 7B68     		ldr	r3, [r7, #4]
 129 00a6 5B88     		ldrh	r3, [r3, #2]
 249:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CTR) ||
 130              		.loc 1 249 0
 131 00a8 382B     		cmp	r3, #56
 132 00aa 18D1     		bne	.L4
 133              	.L3:
 251:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 252:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
 253:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_KEYSIZE;
 134              		.loc 1 253 0
 135 00ac 4FF00003 		mov	r3, #0
 136 00b0 C5F20603 		movt	r3, 20486
 137 00b4 4FF00002 		mov	r2, #0
 138 00b8 C5F20602 		movt	r2, 20486
 139 00bc 1268     		ldr	r2, [r2, #0]
 140 00be 22F44072 		bic	r2, r2, #768
 141 00c2 1A60     		str	r2, [r3, #0]
 254:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
 142              		.loc 1 254 0
 143 00c4 4FF00003 		mov	r3, #0
 144 00c8 C5F20603 		movt	r3, 20486
 145 00cc 4FF00002 		mov	r2, #0
 146 00d0 C5F20602 		movt	r2, 20486
 147 00d4 1168     		ldr	r1, [r2, #0]
 148 00d6 7A68     		ldr	r2, [r7, #4]
 149 00d8 D288     		ldrh	r2, [r2, #6]
 150 00da 0A43     		orrs	r2, r2, r1
 151 00dc 1A60     		str	r2, [r3, #0]
 152              	.L4:
 255:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   configured once the key has 
 256:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   been prepared */
 257:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 258:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 259:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select data Direction */ 
 260:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGODIR;
 153              		.loc 1 260 0
 154 00de 4FF00003 		mov	r3, #0
 155 00e2 C5F20603 		movt	r3, 20486
 156 00e6 4FF00002 		mov	r2, #0
 157 00ea C5F20602 		movt	r2, 20486
 158 00ee 1268     		ldr	r2, [r2, #0]
 159 00f0 22F00402 		bic	r2, r2, #4
 160 00f4 1A60     		str	r2, [r3, #0]
 261:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
 161              		.loc 1 261 0
 162 00f6 4FF00003 		mov	r3, #0
 163 00fa C5F20603 		movt	r3, 20486
 164 00fe 4FF00002 		mov	r2, #0
 165 0102 C5F20602 		movt	r2, 20486
 166 0106 1168     		ldr	r1, [r2, #0]
 167 0108 7A68     		ldr	r2, [r7, #4]
 168 010a 1288     		ldrh	r2, [r2, #0]
 169 010c 0A43     		orrs	r2, r2, r1
 170 010e 1A60     		str	r2, [r3, #0]
 262:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 171              		.loc 1 262 0
 172 0110 07F10C07 		add	r7, r7, #12
 173 0114 BD46     		mov	sp, r7
 174 0116 80BC     		pop	{r7}
 175 0118 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE111:
 179 011a 00BF     		.align	2
 180              		.global	CRYP_StructInit
 181              		.thumb
 182              		.thumb_func
 184              	CRYP_StructInit:
 185              	.LFB112:
 263:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 264:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 265:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_InitStruct member with its default value.
 266:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure which will
 267:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         be initialized.
 268:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 269:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 270:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct)
 271:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 186              		.loc 1 271 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 8
 189              		@ frame_needed = 1, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191 011c 80B4     		push	{r7}
 192              	.LCFI5:
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 7, -4
 195 011e 83B0     		sub	sp, sp, #12
 196              	.LCFI6:
 197              		.cfi_def_cfa_offset 16
 198 0120 00AF     		add	r7, sp, #0
 199              	.LCFI7:
 200              		.cfi_def_cfa_register 7
 201 0122 7860     		str	r0, [r7, #4]
 272:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_AlgoDir member */
 273:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 202              		.loc 1 273 0
 203 0124 7B68     		ldr	r3, [r7, #4]
 204 0126 4FF00002 		mov	r2, #0
 205 012a 1A80     		strh	r2, [r3, #0]	@ movhi
 274:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 275:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_AlgoMode member */
 276:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
 206              		.loc 1 276 0
 207 012c 7B68     		ldr	r3, [r7, #4]
 208 012e 4FF00002 		mov	r2, #0
 209 0132 5A80     		strh	r2, [r3, #2]	@ movhi
 277:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 278:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_DataType member */
 279:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_DataType = CRYP_DataType_32b;
 210              		.loc 1 279 0
 211 0134 7B68     		ldr	r3, [r7, #4]
 212 0136 4FF00002 		mov	r2, #0
 213 013a 9A80     		strh	r2, [r3, #4]	@ movhi
 280:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 281:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_KeySize member */
 282:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_KeySize = CRYP_KeySize_128b;
 214              		.loc 1 282 0
 215 013c 7B68     		ldr	r3, [r7, #4]
 216 013e 4FF00002 		mov	r2, #0
 217 0142 DA80     		strh	r2, [r3, #6]	@ movhi
 283:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 218              		.loc 1 283 0
 219 0144 07F10C07 		add	r7, r7, #12
 220 0148 BD46     		mov	sp, r7
 221 014a 80BC     		pop	{r7}
 222 014c 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE112:
 226 014e 00BF     		.align	2
 227              		.global	CRYP_KeyInit
 228              		.thumb
 229              		.thumb_func
 231              	CRYP_KeyInit:
 232              	.LFB113:
 284:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 285:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 286:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Keys according to the specified parameters in
 287:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the CRYP_KeyInitStruct.
 288:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
 289:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.
 290:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 291:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 292:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 293:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 233              		.loc 1 293 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 0150 80B4     		push	{r7}
 239              	.LCFI8:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0152 83B0     		sub	sp, sp, #12
 243              	.LCFI9:
 244              		.cfi_def_cfa_offset 16
 245 0154 00AF     		add	r7, sp, #0
 246              	.LCFI10:
 247              		.cfi_def_cfa_register 7
 248 0156 7860     		str	r0, [r7, #4]
 294:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Key Initialisation */
 295:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
 249              		.loc 1 295 0
 250 0158 4FF00003 		mov	r3, #0
 251 015c C5F20603 		movt	r3, 20486
 252 0160 7A68     		ldr	r2, [r7, #4]
 253 0162 1268     		ldr	r2, [r2, #0]
 254 0164 1A62     		str	r2, [r3, #32]
 296:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
 255              		.loc 1 296 0
 256 0166 4FF00003 		mov	r3, #0
 257 016a C5F20603 		movt	r3, 20486
 258 016e 7A68     		ldr	r2, [r7, #4]
 259 0170 5268     		ldr	r2, [r2, #4]
 260 0172 5A62     		str	r2, [r3, #36]
 297:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
 261              		.loc 1 297 0
 262 0174 4FF00003 		mov	r3, #0
 263 0178 C5F20603 		movt	r3, 20486
 264 017c 7A68     		ldr	r2, [r7, #4]
 265 017e 9268     		ldr	r2, [r2, #8]
 266 0180 9A62     		str	r2, [r3, #40]
 298:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
 267              		.loc 1 298 0
 268 0182 4FF00003 		mov	r3, #0
 269 0186 C5F20603 		movt	r3, 20486
 270 018a 7A68     		ldr	r2, [r7, #4]
 271 018c D268     		ldr	r2, [r2, #12]
 272 018e DA62     		str	r2, [r3, #44]
 299:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
 273              		.loc 1 299 0
 274 0190 4FF00003 		mov	r3, #0
 275 0194 C5F20603 		movt	r3, 20486
 276 0198 7A68     		ldr	r2, [r7, #4]
 277 019a 1269     		ldr	r2, [r2, #16]
 278 019c 1A63     		str	r2, [r3, #48]
 300:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
 279              		.loc 1 300 0
 280 019e 4FF00003 		mov	r3, #0
 281 01a2 C5F20603 		movt	r3, 20486
 282 01a6 7A68     		ldr	r2, [r7, #4]
 283 01a8 5269     		ldr	r2, [r2, #20]
 284 01aa 5A63     		str	r2, [r3, #52]
 301:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
 285              		.loc 1 301 0
 286 01ac 4FF00003 		mov	r3, #0
 287 01b0 C5F20603 		movt	r3, 20486
 288 01b4 7A68     		ldr	r2, [r7, #4]
 289 01b6 9269     		ldr	r2, [r2, #24]
 290 01b8 9A63     		str	r2, [r3, #56]
 302:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
 291              		.loc 1 302 0
 292 01ba 4FF00003 		mov	r3, #0
 293 01be C5F20603 		movt	r3, 20486
 294 01c2 7A68     		ldr	r2, [r7, #4]
 295 01c4 D269     		ldr	r2, [r2, #28]
 296 01c6 DA63     		str	r2, [r3, #60]
 303:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 297              		.loc 1 303 0
 298 01c8 07F10C07 		add	r7, r7, #12
 299 01cc BD46     		mov	sp, r7
 300 01ce 80BC     		pop	{r7}
 301 01d0 7047     		bx	lr
 302              		.cfi_endproc
 303              	.LFE113:
 305 01d2 00BF     		.align	2
 306              		.global	CRYP_KeyStructInit
 307              		.thumb
 308              		.thumb_func
 310              	CRYP_KeyStructInit:
 311              	.LFB114:
 304:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 305:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 306:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_KeyInitStruct member with its default value.
 307:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
 308:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         which will be initialized.
 309:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 310:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 311:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 312:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 312              		.loc 1 312 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 01d4 80B4     		push	{r7}
 318              	.LCFI11:
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 01d6 83B0     		sub	sp, sp, #12
 322              	.LCFI12:
 323              		.cfi_def_cfa_offset 16
 324 01d8 00AF     		add	r7, sp, #0
 325              	.LCFI13:
 326              		.cfi_def_cfa_register 7
 327 01da 7860     		str	r0, [r7, #4]
 313:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
 328              		.loc 1 313 0
 329 01dc 7B68     		ldr	r3, [r7, #4]
 330 01de 4FF00002 		mov	r2, #0
 331 01e2 1A60     		str	r2, [r3, #0]
 314:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Right = 0;
 332              		.loc 1 314 0
 333 01e4 7B68     		ldr	r3, [r7, #4]
 334 01e6 4FF00002 		mov	r2, #0
 335 01ea 5A60     		str	r2, [r3, #4]
 315:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
 336              		.loc 1 315 0
 337 01ec 7B68     		ldr	r3, [r7, #4]
 338 01ee 4FF00002 		mov	r2, #0
 339 01f2 9A60     		str	r2, [r3, #8]
 316:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Right = 0;
 340              		.loc 1 316 0
 341 01f4 7B68     		ldr	r3, [r7, #4]
 342 01f6 4FF00002 		mov	r2, #0
 343 01fa DA60     		str	r2, [r3, #12]
 317:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
 344              		.loc 1 317 0
 345 01fc 7B68     		ldr	r3, [r7, #4]
 346 01fe 4FF00002 		mov	r2, #0
 347 0202 1A61     		str	r2, [r3, #16]
 318:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Right = 0;
 348              		.loc 1 318 0
 349 0204 7B68     		ldr	r3, [r7, #4]
 350 0206 4FF00002 		mov	r2, #0
 351 020a 5A61     		str	r2, [r3, #20]
 319:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
 352              		.loc 1 319 0
 353 020c 7B68     		ldr	r3, [r7, #4]
 354 020e 4FF00002 		mov	r2, #0
 355 0212 9A61     		str	r2, [r3, #24]
 320:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Right = 0;
 356              		.loc 1 320 0
 357 0214 7B68     		ldr	r3, [r7, #4]
 358 0216 4FF00002 		mov	r2, #0
 359 021a DA61     		str	r2, [r3, #28]
 321:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 360              		.loc 1 321 0
 361 021c 07F10C07 		add	r7, r7, #12
 362 0220 BD46     		mov	sp, r7
 363 0222 80BC     		pop	{r7}
 364 0224 7047     		bx	lr
 365              		.cfi_endproc
 366              	.LFE114:
 368 0226 00BF     		.align	2
 369              		.global	CRYP_IVInit
 370              		.thumb
 371              		.thumb_func
 373              	CRYP_IVInit:
 374              	.LFB115:
 322:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 323:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Initialization Vectors(IV) according to the
 324:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         specified parameters in the CRYP_IVInitStruct.
 325:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef structure that contains
 326:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP Initialization Vectors(IV).
 327:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 328:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 329:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 330:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 375              		.loc 1 330 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 380 0228 80B4     		push	{r7}
 381              	.LCFI14:
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 7, -4
 384 022a 83B0     		sub	sp, sp, #12
 385              	.LCFI15:
 386              		.cfi_def_cfa_offset 16
 387 022c 00AF     		add	r7, sp, #0
 388              	.LCFI16:
 389              		.cfi_def_cfa_register 7
 390 022e 7860     		str	r0, [r7, #4]
 331:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_IVInitStruct->CRYP_IV0Left;
 391              		.loc 1 331 0
 392 0230 4FF00003 		mov	r3, #0
 393 0234 C5F20603 		movt	r3, 20486
 394 0238 7A68     		ldr	r2, [r7, #4]
 395 023a 1268     		ldr	r2, [r2, #0]
 396 023c 1A64     		str	r2, [r3, #64]
 332:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_IVInitStruct->CRYP_IV0Right;
 397              		.loc 1 332 0
 398 023e 4FF00003 		mov	r3, #0
 399 0242 C5F20603 		movt	r3, 20486
 400 0246 7A68     		ldr	r2, [r7, #4]
 401 0248 5268     		ldr	r2, [r2, #4]
 402 024a 5A64     		str	r2, [r3, #68]
 333:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_IVInitStruct->CRYP_IV1Left;
 403              		.loc 1 333 0
 404 024c 4FF00003 		mov	r3, #0
 405 0250 C5F20603 		movt	r3, 20486
 406 0254 7A68     		ldr	r2, [r7, #4]
 407 0256 9268     		ldr	r2, [r2, #8]
 408 0258 9A64     		str	r2, [r3, #72]
 334:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_IVInitStruct->CRYP_IV1Right;
 409              		.loc 1 334 0
 410 025a 4FF00003 		mov	r3, #0
 411 025e C5F20603 		movt	r3, 20486
 412 0262 7A68     		ldr	r2, [r7, #4]
 413 0264 D268     		ldr	r2, [r2, #12]
 414 0266 DA64     		str	r2, [r3, #76]
 335:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 415              		.loc 1 335 0
 416 0268 07F10C07 		add	r7, r7, #12
 417 026c BD46     		mov	sp, r7
 418 026e 80BC     		pop	{r7}
 419 0270 7047     		bx	lr
 420              		.cfi_endproc
 421              	.LFE115:
 423 0272 00BF     		.align	2
 424              		.global	CRYP_IVStructInit
 425              		.thumb
 426              		.thumb_func
 428              	CRYP_IVStructInit:
 429              	.LFB116:
 336:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 337:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 338:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_IVInitStruct member with its default value.
 339:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef Initialization 
 340:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         Vectors(IV) structure which will be initialized.
 341:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 342:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 343:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 344:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 430              		.loc 1 344 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 8
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0274 80B4     		push	{r7}
 436              	.LCFI17:
 437              		.cfi_def_cfa_offset 4
 438              		.cfi_offset 7, -4
 439 0276 83B0     		sub	sp, sp, #12
 440              	.LCFI18:
 441              		.cfi_def_cfa_offset 16
 442 0278 00AF     		add	r7, sp, #0
 443              	.LCFI19:
 444              		.cfi_def_cfa_register 7
 445 027a 7860     		str	r0, [r7, #4]
 345:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Left  = 0;
 446              		.loc 1 345 0
 447 027c 7B68     		ldr	r3, [r7, #4]
 448 027e 4FF00002 		mov	r2, #0
 449 0282 1A60     		str	r2, [r3, #0]
 346:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Right = 0;
 450              		.loc 1 346 0
 451 0284 7B68     		ldr	r3, [r7, #4]
 452 0286 4FF00002 		mov	r2, #0
 453 028a 5A60     		str	r2, [r3, #4]
 347:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Left  = 0;
 454              		.loc 1 347 0
 455 028c 7B68     		ldr	r3, [r7, #4]
 456 028e 4FF00002 		mov	r2, #0
 457 0292 9A60     		str	r2, [r3, #8]
 348:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Right = 0;
 458              		.loc 1 348 0
 459 0294 7B68     		ldr	r3, [r7, #4]
 460 0296 4FF00002 		mov	r2, #0
 461 029a DA60     		str	r2, [r3, #12]
 349:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 462              		.loc 1 349 0
 463 029c 07F10C07 		add	r7, r7, #12
 464 02a0 BD46     		mov	sp, r7
 465 02a2 80BC     		pop	{r7}
 466 02a4 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE116:
 470 02a6 00BF     		.align	2
 471              		.global	CRYP_FIFOFlush
 472              		.thumb
 473              		.thumb_func
 475              	CRYP_FIFOFlush:
 476              	.LFB117:
 350:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 351:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 352:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Flushes the IN and OUT FIFOs (that is read and write pointers of the 
 353:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         FIFOs are reset)
 354:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The FIFOs must be flushed only when BUSY flag is reset.  
 355:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 356:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 357:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 358:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_FIFOFlush(void)
 359:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 477              		.loc 1 359 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482 02a8 80B4     		push	{r7}
 483              	.LCFI20:
 484              		.cfi_def_cfa_offset 4
 485              		.cfi_offset 7, -4
 486 02aa 00AF     		add	r7, sp, #0
 487              	.LCFI21:
 488              		.cfi_def_cfa_register 7
 360:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Reset the read and write pointers of the FIFOs */
 361:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_FFLUSH;
 489              		.loc 1 361 0
 490 02ac 4FF00003 		mov	r3, #0
 491 02b0 C5F20603 		movt	r3, 20486
 492 02b4 4FF00002 		mov	r2, #0
 493 02b8 C5F20602 		movt	r2, 20486
 494 02bc 1268     		ldr	r2, [r2, #0]
 495 02be 42F48042 		orr	r2, r2, #16384
 496 02c2 1A60     		str	r2, [r3, #0]
 362:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 497              		.loc 1 362 0
 498 02c4 BD46     		mov	sp, r7
 499 02c6 80BC     		pop	{r7}
 500 02c8 7047     		bx	lr
 501              		.cfi_endproc
 502              	.LFE117:
 504 02ca 00BF     		.align	2
 505              		.global	CRYP_Cmd
 506              		.thumb
 507              		.thumb_func
 509              	CRYP_Cmd:
 510              	.LFB118:
 363:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 364:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 365:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP peripheral.
 366:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the CRYP peripheral.
 367:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 368:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 369:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 370:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Cmd(FunctionalState NewState)
 371:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 511              		.loc 1 371 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 8
 514              		@ frame_needed = 1, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 516 02cc 80B4     		push	{r7}
 517              	.LCFI22:
 518              		.cfi_def_cfa_offset 4
 519              		.cfi_offset 7, -4
 520 02ce 83B0     		sub	sp, sp, #12
 521              	.LCFI23:
 522              		.cfi_def_cfa_offset 16
 523 02d0 00AF     		add	r7, sp, #0
 524              	.LCFI24:
 525              		.cfi_def_cfa_register 7
 526 02d2 0346     		mov	r3, r0
 527 02d4 FB71     		strb	r3, [r7, #7]
 372:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 373:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 374:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 375:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 528              		.loc 1 375 0
 529 02d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 530 02d8 002B     		cmp	r3, #0
 531 02da 0CD0     		beq	.L12
 376:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 377:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the Cryptographic processor */
 378:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_CR_CRYPEN;
 532              		.loc 1 378 0
 533 02dc 4FF00003 		mov	r3, #0
 534 02e0 C5F20603 		movt	r3, 20486
 535 02e4 4FF00002 		mov	r2, #0
 536 02e8 C5F20602 		movt	r2, 20486
 537 02ec 1268     		ldr	r2, [r2, #0]
 538 02ee 42F40042 		orr	r2, r2, #32768
 539 02f2 1A60     		str	r2, [r3, #0]
 540 02f4 0BE0     		b	.L11
 541              	.L12:
 379:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 380:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 381:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 382:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the Cryptographic processor */
 383:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_CRYPEN;
 542              		.loc 1 383 0
 543 02f6 4FF00003 		mov	r3, #0
 544 02fa C5F20603 		movt	r3, 20486
 545 02fe 4FF00002 		mov	r2, #0
 546 0302 C5F20602 		movt	r2, 20486
 547 0306 1268     		ldr	r2, [r2, #0]
 548 0308 22F40042 		bic	r2, r2, #32768
 549 030c 1A60     		str	r2, [r3, #0]
 550              	.L11:
 384:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 385:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 551              		.loc 1 385 0
 552 030e 07F10C07 		add	r7, r7, #12
 553 0312 BD46     		mov	sp, r7
 554 0314 80BC     		pop	{r7}
 555 0316 7047     		bx	lr
 556              		.cfi_endproc
 557              	.LFE118:
 559              		.align	2
 560              		.global	CRYP_DataIn
 561              		.thumb
 562              		.thumb_func
 564              	CRYP_DataIn:
 565              	.LFB119:
 386:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 387:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 388:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 389:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 390:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group2 CRYP Data processing functions
 391:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    CRYP Data processing functions
 392:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 393:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 394:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 395:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       CRYP Data processing functions
 396:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 397:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing the encryption and decryption 
 398:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   operations: 
 399:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - Enter data to be treated in the IN FIFO : using CRYP_DataIn() function.
 400:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - Get the data result from the OUT FIFO : using CRYP_DataOut() function.
 401:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 402:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 403:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 404:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 405:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 406:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 407:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Writes data in the Data Input register (DIN).
 408:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   After the DIN register has been read once or several times, 
 409:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the FIFO must be flushed (using CRYP_FIFOFlush() function).  
 410:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  Data: data to write in Data Input register
 411:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 412:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 413:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DataIn(uint32_t Data)
 414:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 566              		.loc 1 414 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 8
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571 0318 80B4     		push	{r7}
 572              	.LCFI25:
 573              		.cfi_def_cfa_offset 4
 574              		.cfi_offset 7, -4
 575 031a 83B0     		sub	sp, sp, #12
 576              	.LCFI26:
 577              		.cfi_def_cfa_offset 16
 578 031c 00AF     		add	r7, sp, #0
 579              	.LCFI27:
 580              		.cfi_def_cfa_register 7
 581 031e 7860     		str	r0, [r7, #4]
 415:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DR = Data;
 582              		.loc 1 415 0
 583 0320 4FF00003 		mov	r3, #0
 584 0324 C5F20603 		movt	r3, 20486
 585 0328 7A68     		ldr	r2, [r7, #4]
 586 032a 9A60     		str	r2, [r3, #8]
 416:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 587              		.loc 1 416 0
 588 032c 07F10C07 		add	r7, r7, #12
 589 0330 BD46     		mov	sp, r7
 590 0332 80BC     		pop	{r7}
 591 0334 7047     		bx	lr
 592              		.cfi_endproc
 593              	.LFE119:
 595 0336 00BF     		.align	2
 596              		.global	CRYP_DataOut
 597              		.thumb
 598              		.thumb_func
 600              	CRYP_DataOut:
 601              	.LFB120:
 417:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 418:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 419:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Returns the last data entered into the output FIFO.
 420:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 421:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval Last data entered into the output FIFO.
 422:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 423:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** uint32_t CRYP_DataOut(void)
 424:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 602              		.loc 1 424 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 607 0338 80B4     		push	{r7}
 608              	.LCFI28:
 609              		.cfi_def_cfa_offset 4
 610              		.cfi_offset 7, -4
 611 033a 00AF     		add	r7, sp, #0
 612              	.LCFI29:
 613              		.cfi_def_cfa_register 7
 425:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return CRYP->DOUT;
 614              		.loc 1 425 0
 615 033c 4FF00003 		mov	r3, #0
 616 0340 C5F20603 		movt	r3, 20486
 617 0344 DB68     		ldr	r3, [r3, #12]
 426:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 618              		.loc 1 426 0
 619 0346 1846     		mov	r0, r3
 620 0348 BD46     		mov	sp, r7
 621 034a 80BC     		pop	{r7}
 622 034c 7047     		bx	lr
 623              		.cfi_endproc
 624              	.LFE120:
 626 034e 00BF     		.align	2
 627              		.global	CRYP_SaveContext
 628              		.thumb
 629              		.thumb_func
 631              	CRYP_SaveContext:
 632              	.LFB121:
 427:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 428:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 429:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 430:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 431:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group3 Context swapping functions
 432:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Context swapping functions
 433:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 434:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 435:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 436:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              Context swapping functions
 437:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 438:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 439:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to save and store CRYP Context
 440:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 441:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   It is possible to interrupt an encryption/ decryption/ key generation process 
 442:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to perform another processing with a higher priority, and to complete the 
 443:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   interrupted process later on, when the higher-priority task is complete. To do 
 444:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   so, the context of the interrupted task must be saved from the CRYP registers 
 445:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to memory, and then be restored from memory to the CRYP registers.
 446:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 447:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   1. To save the current context, use CRYP_SaveContext() function
 448:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   2. To restore the saved context, use CRYP_RestoreContext() function 
 449:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 450:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 451:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 452:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 453:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 454:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 455:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 456:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Saves the CRYP peripheral Context. 
 457:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function stops DMA transfer before to save the context. After 
 458:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         restoring the context, you have to enable the DMA again (if the DMA
 459:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         was previously used).
 460:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextSave: pointer to a CRYP_Context structure that contains
 461:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for current context.
 462:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that 
 463:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.  
 464:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 465:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 466:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ErrorStatus CRYP_SaveContext(CRYP_Context* CRYP_ContextSave,
 467:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 468:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 633              		.loc 1 468 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 24
 636              		@ frame_needed = 1, uses_anonymous_args = 0
 637              		@ link register save eliminated.
 638 0350 80B4     		push	{r7}
 639              	.LCFI30:
 640              		.cfi_def_cfa_offset 4
 641              		.cfi_offset 7, -4
 642 0352 87B0     		sub	sp, sp, #28
 643              	.LCFI31:
 644              		.cfi_def_cfa_offset 32
 645 0354 00AF     		add	r7, sp, #0
 646              	.LCFI32:
 647              		.cfi_def_cfa_register 7
 648 0356 7860     		str	r0, [r7, #4]
 649 0358 3960     		str	r1, [r7, #0]
 469:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   __IO uint32_t timeout = 0;
 650              		.loc 1 469 0
 651 035a 4FF00003 		mov	r3, #0
 652 035e BB60     		str	r3, [r7, #8]
 470:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t ckeckmask = 0, bitstatus;    
 653              		.loc 1 470 0
 654 0360 4FF00003 		mov	r3, #0
 655 0364 7B61     		str	r3, [r7, #20]
 471:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ErrorStatus status = ERROR;
 656              		.loc 1 471 0
 657 0366 4FF00003 		mov	r3, #0
 658 036a FB74     		strb	r3, [r7, #19]
 472:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 473:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Stop DMA transfers on the IN FIFO by clearing the DIEN bit in the CRYP_DMACR */
 474:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DIEN;
 659              		.loc 1 474 0
 660 036c 4FF00003 		mov	r3, #0
 661 0370 C5F20603 		movt	r3, 20486
 662 0374 4FF00002 		mov	r2, #0
 663 0378 C5F20602 		movt	r2, 20486
 664 037c 1269     		ldr	r2, [r2, #16]
 665 037e 22F00102 		bic	r2, r2, #1
 666 0382 1A61     		str	r2, [r3, #16]
 475:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 476:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Wait until both the IN and OUT FIFOs are empty  
 477:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (IFEM=1 and OFNE=0 in the CRYP_SR register) and the 
 478:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      BUSY bit is cleared. */
 479:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 480:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->CR & (uint32_t)(CRYP_CR_ALGOMODE_TDES_ECB | CRYP_CR_ALGOMODE_TDES_CBC)) != (uint32_t)0
 667              		.loc 1 480 0
 668 0384 4FF00003 		mov	r3, #0
 669 0388 C5F20603 		movt	r3, 20486
 670 038c 1B68     		ldr	r3, [r3, #0]
 671 038e 03F00803 		and	r3, r3, #8
 672 0392 002B     		cmp	r3, #0
 673 0394 03D0     		beq	.L17
 481:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   { 
 482:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY ;
 674              		.loc 1 482 0
 675 0396 4FF01103 		mov	r3, #17
 676 039a 7B61     		str	r3, [r7, #20]
 677 039c 02E0     		b	.L18
 678              	.L17:
 483:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 484:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else /* AES or DES */
 485:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 486:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY | CRYP_SR_OFNE;
 679              		.loc 1 486 0
 680 039e 4FF01503 		mov	r3, #21
 681 03a2 7B61     		str	r3, [r7, #20]
 682              	.L18:
 487:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }           
 488:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 489:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   do 
 490:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 491:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = CRYP->SR & ckeckmask;
 683              		.loc 1 491 0 discriminator 1
 684 03a4 4FF00003 		mov	r3, #0
 685 03a8 C5F20603 		movt	r3, 20486
 686 03ac 5A68     		ldr	r2, [r3, #4]
 687 03ae 7B69     		ldr	r3, [r7, #20]
 688 03b0 1340     		ands	r3, r3, r2
 689 03b2 FB60     		str	r3, [r7, #12]
 492:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     timeout++;
 690              		.loc 1 492 0 discriminator 1
 691 03b4 BB68     		ldr	r3, [r7, #8]
 692 03b6 03F10103 		add	r3, r3, #1
 693 03ba BB60     		str	r3, [r7, #8]
 493:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 494:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   while ((timeout != MAX_TIMEOUT) && (bitstatus != CRYP_SR_IFEM));
 694              		.loc 1 494 0 discriminator 1
 695 03bc BA68     		ldr	r2, [r7, #8]
 696 03be 4FF6FF73 		movw	r3, #65535
 697 03c2 9A42     		cmp	r2, r3
 698 03c4 02D0     		beq	.L19
 699 03c6 FB68     		ldr	r3, [r7, #12]
 700 03c8 012B     		cmp	r3, #1
 701 03ca EBD1     		bne	.L18
 702              	.L19:
 495:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 496:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->SR & ckeckmask) != CRYP_SR_IFEM)
 703              		.loc 1 496 0
 704 03cc 4FF00003 		mov	r3, #0
 705 03d0 C5F20603 		movt	r3, 20486
 706 03d4 5A68     		ldr	r2, [r3, #4]
 707 03d6 7B69     		ldr	r3, [r7, #20]
 708 03d8 1340     		ands	r3, r3, r2
 709 03da 012B     		cmp	r3, #1
 710 03dc 03D0     		beq	.L20
 497:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 498:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = ERROR;
 711              		.loc 1 498 0
 712 03de 4FF00003 		mov	r3, #0
 713 03e2 FB74     		strb	r3, [r7, #19]
 714 03e4 5FE0     		b	.L21
 715              	.L20:
 499:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 500:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 501:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {      
 502:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Stop DMA transfers on the OUT FIFO by 
 503:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - writing the DOEN bit to 0 in the CRYP_DMACR register 
 504:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - and clear the CRYPEN bit. */
 505:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 506:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DOEN;
 716              		.loc 1 506 0
 717 03e6 4FF00003 		mov	r3, #0
 718 03ea C5F20603 		movt	r3, 20486
 719 03ee 4FF00002 		mov	r2, #0
 720 03f2 C5F20602 		movt	r2, 20486
 721 03f6 1269     		ldr	r2, [r2, #16]
 722 03f8 22F00202 		bic	r2, r2, #2
 723 03fc 1A61     		str	r2, [r3, #16]
 507:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 724              		.loc 1 507 0
 725 03fe 4FF00003 		mov	r3, #0
 726 0402 C5F20603 		movt	r3, 20486
 727 0406 4FF00002 		mov	r2, #0
 728 040a C5F20602 		movt	r2, 20486
 729 040e 1268     		ldr	r2, [r2, #0]
 730 0410 22F40042 		bic	r2, r2, #32768
 731 0414 1A60     		str	r2, [r3, #0]
 508:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 509:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Save the current configuration (bits [9:2] in the CRYP_CR register) */
 510:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CR_bits9to2  = CRYP->CR & (CRYP_CR_KEYSIZE  | 
 732              		.loc 1 510 0
 733 0416 4FF00003 		mov	r3, #0
 734 041a C5F20603 		movt	r3, 20486
 735 041e 1B68     		ldr	r3, [r3, #0]
 736 0420 03F47F72 		and	r2, r3, #1020
 737 0424 7B68     		ldr	r3, [r7, #4]
 738 0426 1A60     		str	r2, [r3, #0]
 511:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_DATATYPE | 
 512:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_ALGOMODE |
 513:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_ALGODIR); 
 514:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 515:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* and, if not in ECB mode, the initialization vectors. */
 516:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0LR = CRYP->IV0LR;
 739              		.loc 1 516 0
 740 0428 4FF00003 		mov	r3, #0
 741 042c C5F20603 		movt	r3, 20486
 742 0430 1A6C     		ldr	r2, [r3, #64]
 743 0432 7B68     		ldr	r3, [r7, #4]
 744 0434 5A60     		str	r2, [r3, #4]
 517:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 745              		.loc 1 517 0
 746 0436 4FF00003 		mov	r3, #0
 747 043a C5F20603 		movt	r3, 20486
 748 043e 5A6C     		ldr	r2, [r3, #68]
 749 0440 7B68     		ldr	r3, [r7, #4]
 750 0442 9A60     		str	r2, [r3, #8]
 518:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 751              		.loc 1 518 0
 752 0444 4FF00003 		mov	r3, #0
 753 0448 C5F20603 		movt	r3, 20486
 754 044c 9A6C     		ldr	r2, [r3, #72]
 755 044e 7B68     		ldr	r3, [r7, #4]
 756 0450 DA60     		str	r2, [r3, #12]
 519:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 757              		.loc 1 519 0
 758 0452 4FF00003 		mov	r3, #0
 759 0456 C5F20603 		movt	r3, 20486
 760 045a DA6C     		ldr	r2, [r3, #76]
 761 045c 7B68     		ldr	r3, [r7, #4]
 762 045e 1A61     		str	r2, [r3, #16]
 520:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 521:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* save The key value */
 522:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0LR = CRYP_KeyInitStruct->CRYP_Key0Left; 
 763              		.loc 1 522 0
 764 0460 3B68     		ldr	r3, [r7, #0]
 765 0462 1A68     		ldr	r2, [r3, #0]
 766 0464 7B68     		ldr	r3, [r7, #4]
 767 0466 5A61     		str	r2, [r3, #20]
 523:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 768              		.loc 1 523 0
 769 0468 3B68     		ldr	r3, [r7, #0]
 770 046a 5A68     		ldr	r2, [r3, #4]
 771 046c 7B68     		ldr	r3, [r7, #4]
 772 046e 9A61     		str	r2, [r3, #24]
 524:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 773              		.loc 1 524 0
 774 0470 3B68     		ldr	r3, [r7, #0]
 775 0472 9A68     		ldr	r2, [r3, #8]
 776 0474 7B68     		ldr	r3, [r7, #4]
 777 0476 DA61     		str	r2, [r3, #28]
 525:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 778              		.loc 1 525 0
 779 0478 3B68     		ldr	r3, [r7, #0]
 780 047a DA68     		ldr	r2, [r3, #12]
 781 047c 7B68     		ldr	r3, [r7, #4]
 782 047e 1A62     		str	r2, [r3, #32]
 526:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 783              		.loc 1 526 0
 784 0480 3B68     		ldr	r3, [r7, #0]
 785 0482 1A69     		ldr	r2, [r3, #16]
 786 0484 7B68     		ldr	r3, [r7, #4]
 787 0486 5A62     		str	r2, [r3, #36]
 527:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 788              		.loc 1 527 0
 789 0488 3B68     		ldr	r3, [r7, #0]
 790 048a 5A69     		ldr	r2, [r3, #20]
 791 048c 7B68     		ldr	r3, [r7, #4]
 792 048e 9A62     		str	r2, [r3, #40]
 528:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 793              		.loc 1 528 0
 794 0490 3B68     		ldr	r3, [r7, #0]
 795 0492 9A69     		ldr	r2, [r3, #24]
 796 0494 7B68     		ldr	r3, [r7, #4]
 797 0496 DA62     		str	r2, [r3, #44]
 529:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 798              		.loc 1 529 0
 799 0498 3B68     		ldr	r3, [r7, #0]
 800 049a DA69     		ldr	r2, [r3, #28]
 801 049c 7B68     		ldr	r3, [r7, #4]
 802 049e 1A63     		str	r2, [r3, #48]
 530:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 531:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    /* When needed, save the DMA status (pointers for IN and OUT messages, 
 532:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       number of remaining bytes, etc.) */
 533:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 534:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = SUCCESS;
 803              		.loc 1 534 0
 804 04a0 4FF00103 		mov	r3, #1
 805 04a4 FB74     		strb	r3, [r7, #19]
 806              	.L21:
 535:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 536:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 537:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    return status;
 807              		.loc 1 537 0
 808 04a6 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 538:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 809              		.loc 1 538 0
 810 04a8 1846     		mov	r0, r3
 811 04aa 07F11C07 		add	r7, r7, #28
 812 04ae BD46     		mov	sp, r7
 813 04b0 80BC     		pop	{r7}
 814 04b2 7047     		bx	lr
 815              		.cfi_endproc
 816              	.LFE121:
 818              		.align	2
 819              		.global	CRYP_RestoreContext
 820              		.thumb
 821              		.thumb_func
 823              	CRYP_RestoreContext:
 824              	.LFB122:
 539:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 540:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 541:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Restores the CRYP peripheral Context.
 542:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   Since teh DMA transfer is stopped in CRYP_SaveContext() function,
 543:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         after restoring the context, you have to enable the DMA again (if the
 544:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         DMA was previously used).  
 545:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextRestore: pointer to a CRYP_Context structure that contains
 546:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for saved context.
 547:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The data that were saved during context saving must be rewrited into
 548:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the IN FIFO.
 549:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 550:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 551:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_RestoreContext(CRYP_Context* CRYP_ContextRestore)  
 552:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 825              		.loc 1 552 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 8
 828              		@ frame_needed = 1, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830 04b4 80B4     		push	{r7}
 831              	.LCFI33:
 832              		.cfi_def_cfa_offset 4
 833              		.cfi_offset 7, -4
 834 04b6 83B0     		sub	sp, sp, #12
 835              	.LCFI34:
 836              		.cfi_def_cfa_offset 16
 837 04b8 00AF     		add	r7, sp, #0
 838              	.LCFI35:
 839              		.cfi_def_cfa_register 7
 840 04ba 7860     		str	r0, [r7, #4]
 553:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 554:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Configure the processor with the saved configuration */
 555:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR = CRYP_ContextRestore->CR_bits9to2;
 841              		.loc 1 555 0
 842 04bc 4FF00003 		mov	r3, #0
 843 04c0 C5F20603 		movt	r3, 20486
 844 04c4 7A68     		ldr	r2, [r7, #4]
 845 04c6 1268     		ldr	r2, [r2, #0]
 846 04c8 1A60     		str	r2, [r3, #0]
 556:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 557:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* restore The key value */
 558:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_ContextRestore->CRYP_K0LR; 
 847              		.loc 1 558 0
 848 04ca 4FF00003 		mov	r3, #0
 849 04ce C5F20603 		movt	r3, 20486
 850 04d2 7A68     		ldr	r2, [r7, #4]
 851 04d4 5269     		ldr	r2, [r2, #20]
 852 04d6 1A62     		str	r2, [r3, #32]
 559:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_ContextRestore->CRYP_K0RR;
 853              		.loc 1 559 0
 854 04d8 4FF00003 		mov	r3, #0
 855 04dc C5F20603 		movt	r3, 20486
 856 04e0 7A68     		ldr	r2, [r7, #4]
 857 04e2 9269     		ldr	r2, [r2, #24]
 858 04e4 5A62     		str	r2, [r3, #36]
 560:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_ContextRestore->CRYP_K1LR;
 859              		.loc 1 560 0
 860 04e6 4FF00003 		mov	r3, #0
 861 04ea C5F20603 		movt	r3, 20486
 862 04ee 7A68     		ldr	r2, [r7, #4]
 863 04f0 D269     		ldr	r2, [r2, #28]
 864 04f2 9A62     		str	r2, [r3, #40]
 561:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_ContextRestore->CRYP_K1RR;
 865              		.loc 1 561 0
 866 04f4 4FF00003 		mov	r3, #0
 867 04f8 C5F20603 		movt	r3, 20486
 868 04fc 7A68     		ldr	r2, [r7, #4]
 869 04fe 126A     		ldr	r2, [r2, #32]
 870 0500 DA62     		str	r2, [r3, #44]
 562:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_ContextRestore->CRYP_K2LR;
 871              		.loc 1 562 0
 872 0502 4FF00003 		mov	r3, #0
 873 0506 C5F20603 		movt	r3, 20486
 874 050a 7A68     		ldr	r2, [r7, #4]
 875 050c 526A     		ldr	r2, [r2, #36]
 876 050e 1A63     		str	r2, [r3, #48]
 563:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_ContextRestore->CRYP_K2RR;
 877              		.loc 1 563 0
 878 0510 4FF00003 		mov	r3, #0
 879 0514 C5F20603 		movt	r3, 20486
 880 0518 7A68     		ldr	r2, [r7, #4]
 881 051a 926A     		ldr	r2, [r2, #40]
 882 051c 5A63     		str	r2, [r3, #52]
 564:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_ContextRestore->CRYP_K3LR;
 883              		.loc 1 564 0
 884 051e 4FF00003 		mov	r3, #0
 885 0522 C5F20603 		movt	r3, 20486
 886 0526 7A68     		ldr	r2, [r7, #4]
 887 0528 D26A     		ldr	r2, [r2, #44]
 888 052a 9A63     		str	r2, [r3, #56]
 565:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_ContextRestore->CRYP_K3RR;
 889              		.loc 1 565 0
 890 052c 4FF00003 		mov	r3, #0
 891 0530 C5F20603 		movt	r3, 20486
 892 0534 7A68     		ldr	r2, [r7, #4]
 893 0536 126B     		ldr	r2, [r2, #48]
 894 0538 DA63     		str	r2, [r3, #60]
 566:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 567:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* and the initialization vectors. */
 568:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_ContextRestore->CRYP_IV0LR;
 895              		.loc 1 568 0
 896 053a 4FF00003 		mov	r3, #0
 897 053e C5F20603 		movt	r3, 20486
 898 0542 7A68     		ldr	r2, [r7, #4]
 899 0544 5268     		ldr	r2, [r2, #4]
 900 0546 1A64     		str	r2, [r3, #64]
 569:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_ContextRestore->CRYP_IV0RR;
 901              		.loc 1 569 0
 902 0548 4FF00003 		mov	r3, #0
 903 054c C5F20603 		movt	r3, 20486
 904 0550 7A68     		ldr	r2, [r7, #4]
 905 0552 9268     		ldr	r2, [r2, #8]
 906 0554 5A64     		str	r2, [r3, #68]
 570:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_ContextRestore->CRYP_IV1LR;
 907              		.loc 1 570 0
 908 0556 4FF00003 		mov	r3, #0
 909 055a C5F20603 		movt	r3, 20486
 910 055e 7A68     		ldr	r2, [r7, #4]
 911 0560 D268     		ldr	r2, [r2, #12]
 912 0562 9A64     		str	r2, [r3, #72]
 571:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_ContextRestore->CRYP_IV1RR;
 913              		.loc 1 571 0
 914 0564 4FF00003 		mov	r3, #0
 915 0568 C5F20603 		movt	r3, 20486
 916 056c 7A68     		ldr	r2, [r7, #4]
 917 056e 1269     		ldr	r2, [r2, #16]
 918 0570 DA64     		str	r2, [r3, #76]
 572:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 573:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable the cryptographic processor */
 574:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_CRYPEN;
 919              		.loc 1 574 0
 920 0572 4FF00003 		mov	r3, #0
 921 0576 C5F20603 		movt	r3, 20486
 922 057a 4FF00002 		mov	r2, #0
 923 057e C5F20602 		movt	r2, 20486
 924 0582 1268     		ldr	r2, [r2, #0]
 925 0584 42F40042 		orr	r2, r2, #32768
 926 0588 1A60     		str	r2, [r3, #0]
 575:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 927              		.loc 1 575 0
 928 058a 07F10C07 		add	r7, r7, #12
 929 058e BD46     		mov	sp, r7
 930 0590 80BC     		pop	{r7}
 931 0592 7047     		bx	lr
 932              		.cfi_endproc
 933              	.LFE122:
 935              		.align	2
 936              		.global	CRYP_DMACmd
 937              		.thumb
 938              		.thumb_func
 940              	CRYP_DMACmd:
 941              	.LFB123:
 576:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 577:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 578:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 579:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 580:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group4 CRYP's DMA interface Configuration function
 581:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   CRYP's DMA interface Configuration function 
 582:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 583:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 584:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 585:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                    CRYP's DMA interface Configuration function
 586:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 587:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 588:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to configure the DMA interface for 
 589:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP data input and output transfer.
 590:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 591:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   When the DMA mode is enabled (using the CRYP_DMACmd() function), data can be 
 592:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   transferred:
 593:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - From memory to the CRYP IN FIFO using the DMA peripheral by enabling 
 594:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     the CRYP_DMAReq_DataIN request.
 595:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - From the CRYP OUT FIFO to the memory using the DMA peripheral by enabling 
 596:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     the CRYP_DMAReq_DataOUT request.
 597:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 598:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 599:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 600:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 601:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 602:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 603:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP DMA interface.
 604:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_DMAReq: specifies the CRYP DMA transfer request to be enabled or disabled.
 605:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be any combination of the following values:
 606:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataOUT: DMA for outgoing(Tx) data transfer
 607:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataIN: DMA for incoming(Rx) data transfer
 608:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the selected CRYP DMA transfer request.
 609:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 610:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 611:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 612:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DMACmd(uint8_t CRYP_DMAReq, FunctionalState NewState)
 613:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 942              		.loc 1 613 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 8
 945              		@ frame_needed = 1, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 947 0594 80B4     		push	{r7}
 948              	.LCFI36:
 949              		.cfi_def_cfa_offset 4
 950              		.cfi_offset 7, -4
 951 0596 83B0     		sub	sp, sp, #12
 952              	.LCFI37:
 953              		.cfi_def_cfa_offset 16
 954 0598 00AF     		add	r7, sp, #0
 955              	.LCFI38:
 956              		.cfi_def_cfa_register 7
 957 059a 0246     		mov	r2, r0
 958 059c 0B46     		mov	r3, r1
 959 059e FA71     		strb	r2, [r7, #7]
 960 05a0 BB71     		strb	r3, [r7, #6]
 614:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 615:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DMAREQ(CRYP_DMAReq));
 616:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 617:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 618:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 961              		.loc 1 618 0
 962 05a2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 963 05a4 002B     		cmp	r3, #0
 964 05a6 0CD0     		beq	.L24
 619:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 620:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP DMA request */
 621:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR |= CRYP_DMAReq;
 965              		.loc 1 621 0
 966 05a8 4FF00003 		mov	r3, #0
 967 05ac C5F20603 		movt	r3, 20486
 968 05b0 4FF00002 		mov	r2, #0
 969 05b4 C5F20602 		movt	r2, 20486
 970 05b8 1169     		ldr	r1, [r2, #16]
 971 05ba FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 972 05bc 0A43     		orrs	r2, r2, r1
 973 05be 1A61     		str	r2, [r3, #16]
 974 05c0 0EE0     		b	.L23
 975              	.L24:
 622:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 623:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 624:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 625:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP DMA request */
 626:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= (uint8_t)~CRYP_DMAReq;
 976              		.loc 1 626 0
 977 05c2 4FF00003 		mov	r3, #0
 978 05c6 C5F20603 		movt	r3, 20486
 979 05ca 4FF00002 		mov	r2, #0
 980 05ce C5F20602 		movt	r2, 20486
 981 05d2 1169     		ldr	r1, [r2, #16]
 982 05d4 FA79     		ldrb	r2, [r7, #7]
 983 05d6 6FEA0202 		mvn	r2, r2
 984 05da D2B2     		uxtb	r2, r2
 985 05dc 0A40     		ands	r2, r2, r1
 986 05de 1A61     		str	r2, [r3, #16]
 987              	.L23:
 627:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 628:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 988              		.loc 1 628 0
 989 05e0 07F10C07 		add	r7, r7, #12
 990 05e4 BD46     		mov	sp, r7
 991 05e6 80BC     		pop	{r7}
 992 05e8 7047     		bx	lr
 993              		.cfi_endproc
 994              	.LFE123:
 996 05ea 00BF     		.align	2
 997              		.global	CRYP_ITConfig
 998              		.thumb
 999              		.thumb_func
 1001              	CRYP_ITConfig:
 1002              	.LFB124:
 629:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 630:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 631:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 632:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 633:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group5 Interrupts and flags management functions
 634:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Interrupts and flags management functions
 635:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 636:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 637:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 638:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                    Interrupts and flags management functions
 639:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 640:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 641:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to configure the CRYP Interrupts and 
 642:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to get the status and Interrupts pending bits.
 643:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 644:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   The CRYP provides 2 Interrupts sources and 7 Flags:
 645:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 646:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Flags :
 647:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------- 
 648:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           
 649:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      1. CRYP_FLAG_IFEM :  Set when Input FIFO is empty.
 650:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           This Flag is cleared only by hardware.
 651:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       
 652:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      2. CRYP_FLAG_IFNF :  Set when Input FIFO is not full.
 653:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           This Flag is cleared only by hardware.
 654:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 655:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 656:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      3. CRYP_FLAG_INRIS  : Set when Input FIFO Raw interrupt is pending 
 657:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            it gives the raw interrupt state prior to masking 
 658:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            of the input FIFO service interrupt.
 659:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 660:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 661:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      4. CRYP_FLAG_OFNE   : Set when Output FIFO not empty.
 662:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 663:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****         
 664:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      5. CRYP_FLAG_OFFU   : Set when Output FIFO is full.
 665:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 666:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            
 667:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      6. CRYP_FLAG_OUTRIS : Set when Output FIFO Raw interrupt is pending 
 668:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            it gives the raw interrupt state prior to masking 
 669:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            of the output FIFO service interrupt.
 670:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 671:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                
 672:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      7. CRYP_FLAG_BUSY   : Set when the CRYP core is currently processing a 
 673:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            block of data or a key preparation (for AES 
 674:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            decryption).
 675:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 676:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            To clear it, the CRYP core must be disabled and the 
 677:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            last processing has completed. 
 678:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 679:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Interrupts :
 680:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------------
 681:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 682:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    1. CRYP_IT_INI   : The input FIFO service interrupt is asserted when there 
 683:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       are less than 4 words in the input FIFO.
 684:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       This interrupt is associated to CRYP_FLAG_INRIS flag.
 685:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 686:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 @note This interrupt is cleared by performing write operations 
 687:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       to the input FIFO until it holds 4 or more words. The 
 688:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       input FIFO service interrupt INMIS is enabled with the 
 689:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       CRYP enable bit. Consequently, when CRYP is disabled, the 
 690:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       INMIS signal is low even if the input FIFO is empty.
 691:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 692:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 693:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 694:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    2. CRYP_IT_OUTI  : The output FIFO service interrupt is asserted when there 
 695:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       is one or more (32-bit word) data items in the output FIFO.
 696:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       This interrupt is associated to CRYP_FLAG_OUTRIS flag.
 697:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 698:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 @note This interrupt is cleared by reading data from the output 
 699:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       FIFO until there is no valid (32-bit) word left (that is, 
 700:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       the interrupt follows the state of the OFNE (output FIFO 
 701:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       not empty) flag).
 702:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 703:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 704:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Managing the CRYP controller events :
 705:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------------------------------------ 
 706:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   The user should identify which mode will be used in his application to manage 
 707:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   the CRYP controller events: Polling mode or Interrupt mode.
 708:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 709:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   1.  In the Polling Mode it is advised to use the following functions:
 710:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_GetFlagStatus() : to check if flags events occur. 
 711:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 712:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   @note  The CRYPT flags do not need to be cleared since they are cleared as 
 713:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          soon as the associated event are reset.   
 714:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 715:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 716:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
 717:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_ITConfig()       : to enable or disable the interrupt source.
 718:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_GetITStatus()    : to check if Interrupt occurs.
 719:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 720:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   @note  The CRYPT interrupts have no pending bits, the interrupt is cleared as 
 721:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          soon as the associated event is reset. 
 722:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 723:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 724:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 725:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 726:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 727:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 728:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the specified CRYP interrupts.
 729:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP interrupt source to be enabled or disabled.
 730:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be any combination of the following values:
 731:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 732:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 733:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the specified CRYP interrupt.
 734:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be: ENABLE or DISABLE.
 735:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 736:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 737:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_ITConfig(uint8_t CRYP_IT, FunctionalState NewState)
 738:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 1003              		.loc 1 738 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 8
 1006              		@ frame_needed = 1, uses_anonymous_args = 0
 1007              		@ link register save eliminated.
 1008 05ec 80B4     		push	{r7}
 1009              	.LCFI39:
 1010              		.cfi_def_cfa_offset 4
 1011              		.cfi_offset 7, -4
 1012 05ee 83B0     		sub	sp, sp, #12
 1013              	.LCFI40:
 1014              		.cfi_def_cfa_offset 16
 1015 05f0 00AF     		add	r7, sp, #0
 1016              	.LCFI41:
 1017              		.cfi_def_cfa_register 7
 1018 05f2 0246     		mov	r2, r0
 1019 05f4 0B46     		mov	r3, r1
 1020 05f6 FA71     		strb	r2, [r7, #7]
 1021 05f8 BB71     		strb	r3, [r7, #6]
 739:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 740:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_CONFIG_IT(CRYP_IT));
 741:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 742:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 743:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 1022              		.loc 1 743 0
 1023 05fa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1024 05fc 002B     		cmp	r3, #0
 1025 05fe 0CD0     		beq	.L27
 744:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 745:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP interrupt */
 746:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR |= CRYP_IT;
 1026              		.loc 1 746 0
 1027 0600 4FF00003 		mov	r3, #0
 1028 0604 C5F20603 		movt	r3, 20486
 1029 0608 4FF00002 		mov	r2, #0
 1030 060c C5F20602 		movt	r2, 20486
 1031 0610 5169     		ldr	r1, [r2, #20]
 1032 0612 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1033 0614 0A43     		orrs	r2, r2, r1
 1034 0616 5A61     		str	r2, [r3, #20]
 1035 0618 0EE0     		b	.L26
 1036              	.L27:
 747:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 748:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 749:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 750:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP interrupt */
 751:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR &= (uint8_t)~CRYP_IT;
 1037              		.loc 1 751 0
 1038 061a 4FF00003 		mov	r3, #0
 1039 061e C5F20603 		movt	r3, 20486
 1040 0622 4FF00002 		mov	r2, #0
 1041 0626 C5F20602 		movt	r2, 20486
 1042 062a 5169     		ldr	r1, [r2, #20]
 1043 062c FA79     		ldrb	r2, [r7, #7]
 1044 062e 6FEA0202 		mvn	r2, r2
 1045 0632 D2B2     		uxtb	r2, r2
 1046 0634 0A40     		ands	r2, r2, r1
 1047 0636 5A61     		str	r2, [r3, #20]
 1048              	.L26:
 752:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 753:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1049              		.loc 1 753 0
 1050 0638 07F10C07 		add	r7, r7, #12
 1051 063c BD46     		mov	sp, r7
 1052 063e 80BC     		pop	{r7}
 1053 0640 7047     		bx	lr
 1054              		.cfi_endproc
 1055              	.LFE124:
 1057 0642 00BF     		.align	2
 1058              		.global	CRYP_GetITStatus
 1059              		.thumb
 1060              		.thumb_func
 1062              	CRYP_GetITStatus:
 1063              	.LFB125:
 754:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 755:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 756:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP interrupt has occurred or not.
 757:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function checks the status of the masked interrupt (i.e the 
 758:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         interrupt should be previously enabled).     
 759:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP (masked) interrupt source to check.
 760:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 761:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 762:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 763:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_IT (SET or RESET).
 764:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 765:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ITStatus CRYP_GetITStatus(uint8_t CRYP_IT)
 766:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 1064              		.loc 1 766 0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 16
 1067              		@ frame_needed = 1, uses_anonymous_args = 0
 1068              		@ link register save eliminated.
 1069 0644 80B4     		push	{r7}
 1070              	.LCFI42:
 1071              		.cfi_def_cfa_offset 4
 1072              		.cfi_offset 7, -4
 1073 0646 85B0     		sub	sp, sp, #20
 1074              	.LCFI43:
 1075              		.cfi_def_cfa_offset 24
 1076 0648 00AF     		add	r7, sp, #0
 1077              	.LCFI44:
 1078              		.cfi_def_cfa_register 7
 1079 064a 0346     		mov	r3, r0
 1080 064c FB71     		strb	r3, [r7, #7]
 767:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ITStatus bitstatus = RESET;
 1081              		.loc 1 767 0
 1082 064e 4FF00003 		mov	r3, #0
 1083 0652 FB73     		strb	r3, [r7, #15]
 768:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 769:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_IT(CRYP_IT));
 770:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 771:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP interrupt */
 772:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->MISR &  CRYP_IT) != (uint8_t)RESET)
 1084              		.loc 1 772 0
 1085 0654 4FF00003 		mov	r3, #0
 1086 0658 C5F20603 		movt	r3, 20486
 1087 065c DA69     		ldr	r2, [r3, #28]
 1088 065e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1089 0660 1340     		ands	r3, r3, r2
 1090 0662 002B     		cmp	r3, #0
 1091 0664 03D0     		beq	.L30
 773:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 774:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is set */
 775:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 1092              		.loc 1 775 0
 1093 0666 4FF00103 		mov	r3, #1
 1094 066a FB73     		strb	r3, [r7, #15]
 1095 066c 02E0     		b	.L31
 1096              	.L30:
 776:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 777:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 778:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 779:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is reset */
 780:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 1097              		.loc 1 780 0
 1098 066e 4FF00003 		mov	r3, #0
 1099 0672 FB73     		strb	r3, [r7, #15]
 1100              	.L31:
 781:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 782:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_IT status */
 783:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return bitstatus;
 1101              		.loc 1 783 0
 1102 0674 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 784:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1103              		.loc 1 784 0
 1104 0676 1846     		mov	r0, r3
 1105 0678 07F11407 		add	r7, r7, #20
 1106 067c BD46     		mov	sp, r7
 1107 067e 80BC     		pop	{r7}
 1108 0680 7047     		bx	lr
 1109              		.cfi_endproc
 1110              	.LFE125:
 1112 0682 00BF     		.align	2
 1113              		.global	CRYP_GetFlagStatus
 1114              		.thumb
 1115              		.thumb_func
 1117              	CRYP_GetFlagStatus:
 1118              	.LFB126:
 785:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 786:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 787:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP flag is set or not.
 788:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_FLAG: specifies the CRYP flag to check.
 789:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be one of the following values:
 790:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFEM: Input FIFO Empty flag.
 791:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFNF: Input FIFO Not Full flag.
 792:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFNE: Output FIFO Not Empty flag.
 793:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFFU: Output FIFO Full flag.
 794:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_BUSY: Busy flag.
 795:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OUTRIS: Output FIFO raw interrupt flag.
 796:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_INRIS: Input FIFO raw interrupt flag.
 797:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_FLAG (SET or RESET).
 798:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 799:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG)
 800:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 1119              		.loc 1 800 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 16
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123              		@ link register save eliminated.
 1124 0684 80B4     		push	{r7}
 1125              	.LCFI45:
 1126              		.cfi_def_cfa_offset 4
 1127              		.cfi_offset 7, -4
 1128 0686 85B0     		sub	sp, sp, #20
 1129              	.LCFI46:
 1130              		.cfi_def_cfa_offset 24
 1131 0688 00AF     		add	r7, sp, #0
 1132              	.LCFI47:
 1133              		.cfi_def_cfa_register 7
 1134 068a 0346     		mov	r3, r0
 1135 068c FB71     		strb	r3, [r7, #7]
 801:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   FlagStatus bitstatus = RESET;
 1136              		.loc 1 801 0
 1137 068e 4FF00003 		mov	r3, #0
 1138 0692 FB73     		strb	r3, [r7, #15]
 802:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t tempreg = 0;
 1139              		.loc 1 802 0
 1140 0694 4FF00003 		mov	r3, #0
 1141 0698 BB60     		str	r3, [r7, #8]
 803:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 804:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 805:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_FLAG(CRYP_FLAG));
 806:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 807:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* check if the FLAG is in RISR register */
 808:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_FLAG & FLAG_MASK) != 0x00) 
 1142              		.loc 1 808 0
 1143 069a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1144 069c 03F02003 		and	r3, r3, #32
 1145 06a0 002B     		cmp	r3, #0
 1146 06a2 06D0     		beq	.L33
 809:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 810:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->RISR;
 1147              		.loc 1 810 0
 1148 06a4 4FF00003 		mov	r3, #0
 1149 06a8 C5F20603 		movt	r3, 20486
 1150 06ac 9B69     		ldr	r3, [r3, #24]
 1151 06ae BB60     		str	r3, [r7, #8]
 1152 06b0 05E0     		b	.L34
 1153              	.L33:
 811:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 812:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else  /* The FLAG is in SR register */
 813:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 814:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->SR;
 1154              		.loc 1 814 0
 1155 06b2 4FF00003 		mov	r3, #0
 1156 06b6 C5F20603 		movt	r3, 20486
 1157 06ba 5B68     		ldr	r3, [r3, #4]
 1158 06bc BB60     		str	r3, [r7, #8]
 1159              	.L34:
 815:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 816:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 817:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 818:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP flag */
 819:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((tempreg & CRYP_FLAG ) != (uint8_t)RESET)
 1160              		.loc 1 819 0
 1161 06be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1162 06c0 BB68     		ldr	r3, [r7, #8]
 1163 06c2 1340     		ands	r3, r3, r2
 1164 06c4 002B     		cmp	r3, #0
 1165 06c6 03D0     		beq	.L35
 820:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 821:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is set */
 822:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 1166              		.loc 1 822 0
 1167 06c8 4FF00103 		mov	r3, #1
 1168 06cc FB73     		strb	r3, [r7, #15]
 1169 06ce 02E0     		b	.L36
 1170              	.L35:
 823:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 824:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 825:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 826:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is reset */
 827:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 1171              		.loc 1 827 0
 1172 06d0 4FF00003 		mov	r3, #0
 1173 06d4 FB73     		strb	r3, [r7, #15]
 1174              	.L36:
 828:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 829:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 830:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_FLAG status */
 831:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return  bitstatus;
 1175              		.loc 1 831 0
 1176 06d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 832:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1177              		.loc 1 832 0
 1178 06d8 1846     		mov	r0, r3
 1179 06da 07F11407 		add	r7, r7, #20
 1180 06de BD46     		mov	sp, r7
 1181 06e0 80BC     		pop	{r7}
 1182 06e2 7047     		bx	lr
 1183              		.cfi_endproc
 1184              	.LFE126:
 1186              	.Letext0:
 1187              		.file 2 "c:\\program files (x86)\\codesourcery\\eabi\\bin\\../lib/gcc/arm-none-eabi/4.6.3/../../..
 1188              		.file 3 "D:\\Jure\\Projekti\\Git\\AutoPilot\\autopilot_sw\\Libraries\\Device\\STM32F4xx\\Include/s
 1189              		.file 4 "D:\\Jure\\Projekti\\Git\\AutoPilot\\autopilot_sw\\Libraries\\STM32F4xx_StdPeriph_Driver\\
 1190              		.file 5 "D:\\Jure\\Projekti\\Git\\AutoPilot\\autopilot_sw\\Libraries\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp.c
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:18     .text:00000000 $t
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:23     .text:00000000 CRYP_DeInit
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:56     .text:00000020 CRYP_Init
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:184    .text:0000011c CRYP_StructInit
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:231    .text:00000150 CRYP_KeyInit
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:310    .text:000001d4 CRYP_KeyStructInit
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:373    .text:00000228 CRYP_IVInit
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:428    .text:00000274 CRYP_IVStructInit
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:475    .text:000002a8 CRYP_FIFOFlush
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:509    .text:000002cc CRYP_Cmd
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:564    .text:00000318 CRYP_DataIn
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:600    .text:00000338 CRYP_DataOut
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:631    .text:00000350 CRYP_SaveContext
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:823    .text:000004b4 CRYP_RestoreContext
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:940    .text:00000594 CRYP_DMACmd
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:1001   .text:000005ec CRYP_ITConfig
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:1062   .text:00000644 CRYP_GetITStatus
C:\Users\Jure\AppData\Local\Temp\ccVHyZbz.s:1117   .text:00000684 CRYP_GetFlagStatus
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
